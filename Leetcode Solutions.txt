|| Leetcode Solutions||

*Day-1* 

Q. Two Sum--------

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int, int> idx;
    vector<int> result;
    
    for (int i = 0; i < nums.size(); i++) 
    {
        int complement = target - nums[i];
        if (idx.find(complement) != idx.end()) 
        {
            result.push_back(idx[complement]);
            result.push_back(i);
            break;
        }
        idx[nums[i]] = i;
    }
    
    return result;
    }
};

-------------------------------------------------

Q. Reverse Integer------


class Solution {
public:
    int reverse(int x) {
        long sum =0, rem;
        while(x)
        {
            rem = x % 10;
            sum = sum * 10 + rem;
            x = x /10;

            if(sum >= INT_MAX || sum <= INT_MIN) return 0;
        }
        return sum;
        
    }
};
-------------------------------------------------

Q. Palindrome Number ------

class Solution {
public:
    bool isPalindrome(int x) {
        long int sum = 0, rem;
        long int temp = x;
        while ( x>0)
        {
            rem = x % 10;
            sum = sum * 10 + rem;
            x /= 10;
        }
        return (sum == temp);
        
    }
};
------------------------------------------------

Q. Valid Parenthesis ------



